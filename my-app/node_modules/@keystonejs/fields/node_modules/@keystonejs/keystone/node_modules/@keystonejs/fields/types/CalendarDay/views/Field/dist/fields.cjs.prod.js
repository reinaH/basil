"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var dateFns = require("date-fns"), core = require("@emotion/core"), fields = require("@arch-ui/fields"), input = require("@arch-ui/input"), alert = require("@arch-ui/alert");

require("react-day-picker/dist/style.css");

var reactDayPicker = require("react-day-picker");

const CalendarDayField = ({autoFocus: autoFocus, field: field, value: value, errors: errors, onChange: onChange, isDisabled: isDisabled}) => {
  const htmlID = "ks-daypicker-" + field.path, handleDayClick = day => onChange(dateFns.formatISO(day, {
    representation: "date"
  }));
  return core.jsx(fields.FieldContainer, null, core.jsx(fields.FieldLabel, {
    htmlFor: htmlID,
    field: field,
    errors: errors
  }), core.jsx(fields.FieldDescription, {
    text: field.adminDoc
  }), core.jsx(fields.FieldInput, null, core.jsx(reactDayPicker.DayPicker, {
    disabled: [ day => isDisabled || field.config.dateTo && 1 === dateFns.compareAsc(day, dateFns.parseISO(field.config.dateTo)) || field.config.dateTo && 1 === dateFns.compareAsc(dateFns.parseISO(field.config.dateFrom), day) ],
    selected: dateFns.isValid(dateFns.parseISO(value)) ? dateFns.parseISO(value) : void 0,
    onDayClick: handleDayClick
  })), core.jsx(fields.FieldInput, null, core.jsx(input.Input, {
    id: htmlID,
    autoFocus: autoFocus,
    onKeyDown: e => {
      "Enter" === e.key && e.preventDefault();
    },
    onChange: e => {
      const normalisedValue = e.target.value.replace("/", "-").replace("\\", "-"), parsedValue = dateFns.parseISO(normalisedValue);
      10 === normalisedValue.length && dateFns.isValid(parsedValue) ? handleDayClick(parsedValue) : onChange(normalisedValue);
    },
    disabled: isDisabled,
    css: {
      color: dateFns.isValid(dateFns.parseISO(value)) ? void 0 : "darkred"
    },
    value: value
  })), errors.map(({message: message, data: data}) => core.jsx(alert.Alert, {
    appearance: "danger",
    key: message
  }, message, data ? " - " + JSON.stringify(data) : null)));
};

exports.default = CalendarDayField;
