"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var core = require("@emotion/core"), fields = require("@arch-ui/fields");

require("react");

var octiconsReact = require("@primer/octicons-react"), theme = require("@arch-ui/theme"), prettyData = require("../../../../../dist/prettyData-f25b4634.cjs.prod.js");

const FieldLabel = props => {
  const accessError = (props.errors || []).find(error => error instanceof Error && "AccessDeniedError" === error.name);
  return core.jsx("span", {
    css: {
      color: theme.colors.N60,
      fontSize: "0.9rem",
      fontWeight: 500,
      paddingBottom: theme.gridSize,
      display: "flex",
      flexDirection: "row",
      justifyContent: "space-between"
    },
    htmlFor: props.htmlFor
  }, props.field.label, accessError ? core.jsx(octiconsReact.ShieldIcon, {
    title: accessError.message,
    css: {
      color: theme.colors.N20,
      marginRight: "1em"
    }
  }) : null);
}, VirtualField = ({field: field, errors: errors, value: serverValue}) => {
  const value = void 0 !== serverValue ? serverValue : "", canRead = errors.every(error => !(error instanceof Error && "AccessDeniedError" === error.name));
  return core.jsx(fields.FieldContainer, null, core.jsx(FieldLabel, {
    field: field,
    errors: errors
  }), core.jsx(fields.FieldDescription, {
    text: field.adminDoc
  }), core.jsx(prettyData.PrettyData, {
    data: canRead ? value : void 0
  }));
};

exports.FieldLabel = FieldLabel, exports.default = VirtualField;
